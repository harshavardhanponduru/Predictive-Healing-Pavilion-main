# /Users/harsha/Predictive-Healing-Pavilion/api/vitals/database.pyimport sqlite3DB_PATH = "/Users/harsha/Predictive-Healing-Pavilion/api/vitals/vitals.db"# --- Initialize the database ---def init_db():    conn = sqlite3.connect(DB_PATH)    cursor = conn.cursor()    cursor.execute('''        CREATE TABLE IF NOT EXISTS vitals (            id INTEGER PRIMARY KEY AUTOINCREMENT,            heart_rate INTEGER,            blood_pressure TEXT,            alert TEXT,            timestamp DATETIME DEFAULT CURRENT_TIMESTAMP        )    ''')    conn.commit()    conn.close()    print("✅ Database initialized successfully!")# --- Save vitals to the database ---def save_vitals(heart_rate, blood_pressure, alert):    conn = sqlite3.connect(DB_PATH)    cursor = conn.cursor()    cursor.execute('''        INSERT INTO vitals (heart_rate, blood_pressure, alert)        VALUES (?, ?, ?)    ''', (heart_rate, blood_pressure, alert))    conn.commit()    conn.close()    print("✅ Vitals data saved successfully!")# --- Get latest vitals from the database ---def get_latest_vitals():    conn = sqlite3.connect(DB_PATH)    cursor = conn.cursor()    cursor.execute('''        SELECT heart_rate, blood_pressure, alert        FROM vitals        ORDER BY timestamp DESC        LIMIT 1    ''')    latest_vitals = cursor.fetchone()    conn.close()    if latest_vitals:        return {            "heart_rate": latest_vitals[0],            "blood_pressure": latest_vitals[1],            "alert": latest_vitals[2]        }    else:        return {            "heart_rate": "--",            "blood_pressure": "--",            "alert": "No data available"        }